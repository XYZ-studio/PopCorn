{"version":3,"sources":["components/count.tsx","components/title.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Count","count","styleSwitch","className","style","fontSize","transform","Math","floor","random","Title","id","keyList","sleep","ms","Promise","resolve","setTimeout","App","useCookies","cookies","setCookie","useState","setCount","setStyleSwitch","touch","setTouch","touchFun","audio","Audio","volume","play","a","some","e","navigator","userAgent","match","document","ontouchstart","ontouchend","onmousedown","onmouseup","onkeydown","event","includes","code","push","onkeyup","index","indexOf","splice","useEffect","Number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0RA6BeA,EAfc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAEnC,OACI,qBACIC,UAAU,QACVC,MAAO,CACHC,SAAUH,EAAc,OAAS,GACjCI,UAAWJ,EAAW,iBAZtB,EAAE,IAAK,EAAG,EAAG,EAAG,IACPK,KAAKC,MAAsB,EAAhBD,KAAKE,WAWH,QAA8B,IAJ5D,SAOKR,KCbES,G,MARkB,WAC7B,OACI,oBAAIC,GAAG,QAAP,uB,sBCEFC,EAAyB,GACzBC,EAAQ,SAACC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OA2ErCI,EAlEC,WACd,MAA6BC,YAAW,CAAC,UAAzC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BC,mBAAS,GAAnC,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAAsCD,oBAAS,GAA/C,mBAAOpB,EAAP,KAAoBsB,EAApB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAAW,WACfJ,EAAStB,EAAQ,GACjByB,GAAS,GACT,IAAME,EAAQ,IAAIC,MAAM,WACxBD,EAAME,OAAS,GACfF,EAAMG,OACN,sBAAC,sBAAAC,EAAA,6DACCR,GAAe,GADhB,SAEOX,EAAM,KAFb,OAGCW,GAAe,GAHhB,0CAAD,IA8CF,MA/DqB,CAAC,UAAW,QAAS,SAAU,OAAQ,OAAQ,aAAc,iBAC9CS,MAAK,SAAAC,GAAC,OAAIC,UAAUC,UAAUC,MAAMH,OAwBtEI,SAASC,aAAeZ,EAExBW,SAASE,WAAa,WACpBd,GAAS,MAIXY,SAASG,YAAcd,EAEvBW,SAASI,UAAY,WACnBhB,GAAS,KAKbY,SAASK,UAAY,SAACC,GACfhC,EAAQiC,SAASD,EAAME,QAC1BnB,IACAf,EAAQmC,KAAKH,EAAME,QAIvBR,SAASU,QAAU,SAACJ,GAClB,GAAIhC,EAAQiC,SAASD,EAAME,MAAO,CAChC,IAAMG,EAAQrC,EAAQsC,QAAQN,EAAME,MACpCpB,GAAS,GACLuB,GAAS,GACXrC,EAAQuC,OAAOF,EAAO,KAG5BG,qBAAU,WACJhC,EAAQnB,OACVsB,EAAS8B,OAAOjC,EAAQnB,UACzB,IACHmD,qBAAU,WACR/B,EAAU,QAASpB,KAClB,CAACA,IAGF,sBAAKE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOF,MAAOA,EAAOC,YAAaA,IAClC,qBAAKS,GAAG,QAAQR,UAAWsB,EAAQ,WAAa,cCjEvC6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,SAM1BZ,M","file":"static/js/main.2ba5670d.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport './sass/count.sass';\n\ninterface CountType {\n    count: number,\n    styleSwitch: boolean\n}\n\nconst random = () => {\n    const deg = [-10, -5, 0, 5, 10];\n    const randomNumber = Math.floor(Math.random() * 4);\n    return deg[randomNumber];\n};\n\nconst Count: FC<CountType> = ({ count, styleSwitch }) => {\n\n    return (\n        <div\n            className=\"count\"\n            style={{\n                fontSize: styleSwitch ? '60px' : '',\n                transform: styleSwitch ? `rotate(${random()}deg)` : ''\n            }}\n        >\n            {count}\n        </div>\n    );\n};\n\nexport default Count;","import React, {FunctionComponent} from \"react\";\nimport './sass/title.sass';\n\nconst Title: FunctionComponent = () => {\n    return (\n        <h1 id=\"title\">\n            POPCORN\n        </h1>\n    );\n};\n\nexport default Title;","import React, { FC, useState, useEffect } from 'react';\nimport Count from './components/count';\nimport Title from './components/title';\nimport './index.sass';\nimport './components/sass/image.sass';\nimport { useCookies } from 'react-cookie';\n\nconst keyList: Array<string> = [];\nconst sleep = (ms: number) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\nconst isMobileDevice = () => {\n  const mobileDevice = ['Android', 'webOS', 'iPhone', 'iPad', 'iPod', 'BlackBerry', 'Windows Phone']\n  const isMobileDevice = mobileDevice.some(e => navigator.userAgent.match(e))\n  return isMobileDevice\n}\n\n\nconst App: FC = () => {\n  const [cookies, setCookie] = useCookies(['count']);\n  const [count, setCount] = useState(0);\n  const [styleSwitch, setStyleSwitch] = useState(false);\n  const [touch, setTouch] = useState(false);\n  const touchFun = () => {\n    setCount(count + 1);\n    setTouch(true);\n    const audio = new Audio('wtf.mp3');\n    audio.volume = 0.5;\n    audio.play();\n    (async () => {\n      setStyleSwitch(true);\n      await sleep(100);\n      setStyleSwitch(false);\n    })();\n  };\n  if (isMobileDevice()) {\n    // mobile\n    document.ontouchstart = touchFun;\n\n    document.ontouchend = () => {\n      setTouch(false);\n    }\n  } else {\n    // not mobile\n    document.onmousedown = touchFun;\n\n    document.onmouseup = () => {\n      setTouch(false);\n    }\n  }\n\n  // key event\n  document.onkeydown = (event: KeyboardEvent) => {\n    if (!keyList.includes(event.code)) {\n      touchFun();\n      keyList.push(event.code);\n    }\n  };\n\n  document.onkeyup = (event: KeyboardEvent) => {\n    if (keyList.includes(event.code)) {\n      const index = keyList.indexOf(event.code);\n      setTouch(false);\n      if (index > -1)\n        keyList.splice(index, 1);\n    }\n  };\n  useEffect(() => {\n    if (cookies.count)\n      setCount(Number(cookies.count));\n  }, [])\n  useEffect(() => {\n    setCookie('count', count);\n  }, [count]);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <Count count={count} styleSwitch={styleSwitch} />\n      <div id=\"image\" className={touch ? 'no-touch' : 'touch'}></div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}